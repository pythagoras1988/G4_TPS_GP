from mpi4py import MPI
import numpy as np
import os
import shutil
import subprocess

class InitMPI:
    def __init__(self):
        self.comm = MPI.COMM_WORLD
        self.size = self.comm.Get_size()
        print('Initializing MPI mode for %d processes' %self.size)
        if self.size>0:
            self.MPImode = True
        else:
            self.MPImode = False

    # Generate individual mac file for each process
    def generateInputFilePerProcess(self):
        rank = self.comm.Get_rank()
        fname = 'hadron_therapy' + str(rank) + '.mac'
        if os.path.isfile(fname):
            os.remove(fname)
        else:
            shutil.copyfile('hadron_therapy.mac',fname)

    #Generate individual dose.out file for each process
    def generateOutputFilePerProcess(self):
        rank = self.comm.Get_rank()
        fname = 'Dose.' + str(rank) + '.out'
        if os.path.isfile(fname):
            os.remove(fname)

    def reduceData(self):
        pass

    def runG4PerProcess(self):
        if self.MPImode:
            subprocess.call()

    # Clear all files generated by processes
    def destructor(self):
        if self.MPImode:
            rank = self.comm.Get_rank()
            fname1 = 'hadron_therapy' + str(rank) + '.mac'
            fname2 = 'Dose.' + str(rank) + '.out'
            try:
                os.remove(fname1)
                os.remove(fname2)
            except:
                raise exception('The input and output files by the processes do not exists...')

if __name__ == '__main__':
    mpiPtr = InitMPI()
